#parse ("util.vm")
package com.xa3ti.#toLowerCase(${project.identify}).business.service;

import java.util.Map;
import java.util.List;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.xa3ti.#toLowerCase(${project.identify}).base.exception.BusinessException;
import com.xa3ti.#toLowerCase(${project.identify}).base.util.XaResult;
import com.xa3ti.#toLowerCase(${project.identify}).business.entity.#initUpperCase(${model.identify});


public interface #initUpperCase(${model.identify})Service {

	public XaResult<#initUpperCase(${model.identify})> find#initUpperCase(${model.identify})(Long modelId) throws BusinessException;
	
	public XaResult<Page<#initUpperCase(${model.identify})>> find#initUpperCase(${model.identify})NEStatusByFilter(Integer status, Map<String, Object> filterParams,
			Pageable pageable) throws BusinessException;
	
	public XaResult<Page<#initUpperCase(${model.identify})>> find#initUpperCase(${model.identify})EQStatusByFilter(Integer status, Map<String, Object> filterParams,
			Pageable pageable) throws BusinessException;
	
	public XaResult<#initUpperCase(${model.identify})> create#initUpperCase(${model.identify})(Long userId,#initUpperCase(${model.identify}) model) throws BusinessException;
	
	public XaResult<#initUpperCase(${model.identify})> update#initUpperCase(${model.identify})(Long userId,#initUpperCase(${model.identify}) model) throws BusinessException;
	
	public XaResult<#initUpperCase(${model.identify})> operate#initUpperCase(${model.identify})(Long userId,Long modelId,Integer status) throws BusinessException;
	
	public XaResult<#initUpperCase(${model.identify})> multiOperate#initUpperCase(${model.identify})(Long userId,String modelIds,Integer status) throws BusinessException;
	
	public XaResult<List<#initUpperCase(${model.identify})>> find#initUpperCase(${model.identify})VoByFilter(Integer status, Map<String, Object> filterParams,
			Pageable pageable) throws BusinessException;
	
}
